{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlPattern","Input","state","inputValidation","text","checkValidation","field","name","value","length","setState","test","props","onChange","checkValue","input","this","event","target","onBlur","React","Component","NewMovie","titleValidation","imgUrlValidation","imdbUrlValidation","imdbIdValidation","changeFormState","clearState","makeNewMovie","newMovie","onSubmit","maxLength","type","disabled","Object","values","includes","App","moviesFromServer","addMovie","preventDefault","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.756b0f94.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport './input.css';\nimport PropTypes from 'prop-types';\n// eslint-disable-next-line\nexport const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\r\n\nexport class Input extends React.Component {\n  state = {\n    inputValidation: true,\n    text: '',\n  }\n\n  checkValidation = (field) => {\n    if (field.name === 'title' || field.name === 'imdbId') {\n      field.value.length === 0\n        ? this.setState({\n          inputValidation: !!field.value.length,\n          text: 'Is required',\n        })\n        : this.setState({\n          inputValidation: !!field.value.length,\n        });\n    } else {\n      field.value.length === 0\n        ? this.setState({\n          inputValidation: urlPattern.test(field.value),\n          text: 'Is required',\n        })\n        : this.setState({\n          inputValidation: urlPattern.test(field.value),\n          text: 'wrong format',\n        });\n    }\n\n    this.props.onChange(field.name, field.value);\n  }\n\n  checkValue = (input) => {\n    this.props.onChange(input.name, input.value);\n\n    input.value.length === 0\n      && this.setState({\n        text: '',\n        inputValidation: !!input.value.length,\n      });\n  }\n\n  render() {\n    const {\n      title,\n      name,\n      value,\n    } = this.props;\n\n    const { inputValidation, text } = this.state;\n\n    return (\n      <label>\n        {`${title} `}\n        <input\n          className={\n            inputValidation\n              ? 'input'\n              : 'input app__input'\n          }\n          value={value}\n          name={name}\n          onChange={event => this.checkValue(event.target)}\n          onBlur={event => this.checkValidation(event.target)}\n        />\n        <span\n          className=\"app__error\"\n        >\n          {\n            inputValidation ? null : text\n          }\n        </span>\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, urlPattern } from '../Input';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleValidation: false,\n    imgUrlValidation: false,\n    imdbUrlValidation: false,\n    imdbIdValidation: false,\n  };\n\n  changeFormState = (name, value) => {\n    if (name === 'description') {\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    if (name === 'title' || name === 'imdbId') {\n      this.setState({\n        [name]: value,\n        [`${name}Validation`]: !!value.length,\n      });\n    } else {\n      this.setState({\n        [name]: value,\n        [`${name}Validation`]: urlPattern.test(value),\n      });\n    }\n  }\n\n  clearState = () => this.setState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleValidation: false,\n    imgUrlValidation: false,\n    imdbUrlValidation: false,\n    imdbIdValidation: false,\n  });\n\n  makeNewMovie = () => {\n    const newMovie = { ...this.state };\n\n    this.clearState();\n\n    return newMovie;\n  }\n\n  render() {\n    const {\n      description,\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <>\n        <strong>\n          Add new movie\n        </strong>\n        <form\n          className=\"app__form\"\n          onSubmit={\n            event => this.props.onSubmit(event, this.makeNewMovie())\n          }\n        >\n          <Input\n            value={title}\n            name=\"title\"\n            title=\"Title\"\n            onChange={this.changeFormState}\n          />\n\n          <label>\n            <div>\n              Description\n            </div>\n            <textarea\n              value={description}\n              name=\"description\"\n              className=\"app__textarea\"\n              maxLength=\"300\"\n              onChange={\n              event => this.changeFormState(\n                event.target.name,\n                event.target.value,\n              )\n            }\n            />\n          </label>\n\n          <Input\n            value={imgUrl}\n            onChange={this.changeFormState}\n            name=\"imgUrl\"\n            title=\"ImgUrl\"\n          />\n          <Input\n            value={imdbUrl}\n            onChange={this.changeFormState}\n            name=\"imdbUrl\"\n            title=\"ImdbUrl\"\n          />\n          <Input\n            value={imdbId}\n            onChange={this.changeFormState}\n            name=\"imdbId\"\n            title=\"ImdbId\"\n          />\n          <button\n            type=\"submit\"\n            disabled={Object.values(this.state).includes(false)}\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (event, movie) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onSubmit={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}